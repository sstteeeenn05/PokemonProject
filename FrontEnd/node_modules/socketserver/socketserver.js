
var express = require("express");
var app = express();
//引用http包来创建服务器
var server = require("http").createServer(app);
//引用socket.io包来监听服务器
var io = require("socket.io").listen(server);
var users = [];  //用来保存所有在线的用户的昵称

//引用静态目录
app.use("/",express.static(__dirname+"/page"));

//服务器监听端口
server.listen(1212);
console.log("服务器启动成功");

//socket的部分
io.on("connection",function(socket){
	
	//服务器监听用户的登入
	socket.on("login",function(nickname){
		//判断用户在不在这个数组里
		if(users.indexOf(nickname)>-1){
			//向客户端发送一个方法
			socket.emit("nickExisted");
		}else{
			//添加socket的user Index属性
			socket.userIndex = users.length;
			//添加socket的nickname属性
			socket.nickname = nickname;
			//将昵称添加到数组的后面
			users.push(nickname);
			//向当前连接的客户端发送成功的方法
			socket.emit("loginSuccess");
			//向所有连接到服务器的客户端发送 当前登入的用户的昵称
			io.sockets.emit("system",nickname,users.length,"login");
			//socket.emit() 向当前连接服务器的用户发送消息
			// io.sockets.emit() 向所有连接到服务器的客户端发送消息
			// socket.broadcast.emit() 向除了自己之外的所有连接服务器的人发送消息
		}
	});
	
	//服务器监听用户断开连接
	socket.on("disconnect",function(){
		//将断开连接的用户从users中删除
		users.splice(socket.userIndex,1);//通知连接服务器的所有人
		io.sockets.emit("system",socket.nickname,users.length,"logout");
	});
	
	//将用户发送的消息发送给出自己以外的其他用户
	socket.on("postMsg",function(msg,color){
		socket.broadcast.emit("newMsg",socket.nickname,msg,color);
	});
	
	//服务器接收用户上传的图片
	socket.on("img",function(imgData){
		socket.broadcast.emit("newImg",socket.nickname,imgData);
	});
	
})





































